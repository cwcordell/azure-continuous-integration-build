# Trigger Notes:
# 1. The default for both branches and paths is to include all branches and paths,
#     thus include is Implicit unless include and/or exclude is specified.
# 2. Order of include and exclude and their list order is irrevelant.
# 3. Triggers are evaluated before the runtime of the build, thus variables
#     and other event data are not available when the build is triggered.
# 4. Tags and paths are evaluated as an or when used with branch filters, thus if a branch is a trigger
#     and either a tag or path is included then the build is run.
# 5. New branches pushed to the repository will trigger a run unless the path filter's criteria is not met. 
# 6. The asterisk is a reserved character in YAML and therefor must be quoted if it is the first character in a string.
# 7. Builds can be skipped by adding special text to the commit comment. 
#     Variations include: [skip azurepipelines], [azurepipelines skip], [skip azpipelines], [azpipelines skip],
#     [skip ci], [ci skip], skip-checks: true, skip-checks:true, [skip azp], [azp skip], ***NO_CI***
#     i.e., git commit -m "[skip ci] skipping a build with a comment"
# 8. The batch boolean can be added to triggers to optimize resources. 
#     If enabled then pushes to the repository will not trigger another build right away. 
#     All pushes to a branch will be ran together once the current build is done.

# Path Notes:
# 1. Branches must be defined to use paths.
# 2. A path can not be excluded and then included unless going deeper into the structure.
# 3. Paths defined in the yaml is for Git repositories with the exception of Azure Git. 
#     Azure Git paths are set in the Azure DevOps repository branch settings.
# 4. Paths are relative to the repository root directory.
# 5. The asterisk (*) is optional at the end of a path. Children of a directory are implied.
#     The asterisk is not allowed anywhere but the end of the path.
# 6. Paths are case sensitive.

# PR Notes:
# 1. Triggers a pipeline upone opening a pull request if the target branch criteria is specified.
# 2. Similar to the general trigger structure in regard to branches and paths with include and exclude.
# 3. AutoCancel specifies whether updates to a pull request make it invalid. The default is true.
# 4. Pull requests can be triggered by specifying them here but most Git hosts have alternate
#      means of setting up pull request triggers. Either will work however.

trigger:
  batch: true # will not start another build when one is already in progress
  branches:
    include:
    - master
    - feature/*
    - refs/tags/mytag
    exclude:
    - test/*
    - refs/tags/yourtag
  paths:
    include:
    - development/main/*
    exclude:
    - README.md
    - development/*
  tags:
    include:
    - v3.1
    exclude:
    - v4.*

# trigger: none will not automatically start a CI build, this build must be ran manually.
# trigger: none

# pr:
#   branches:
#     include:
#      - '*' 
#     exclude:
#     - feature/*
#   paths:
#     include:
#     - development/main/*
#     exclude:
#     - development/*
#   autoCancel: false

# None can be specified so that no pull requests are ran automatically.
# pr: none

pool:
  vmImage: 'ubuntu-latest'

steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'

- script: |
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
  displayName: 'Run a multi-line script'
